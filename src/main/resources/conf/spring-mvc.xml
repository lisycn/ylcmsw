<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd


    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter,是spring 
		MVC为@Controllers分发请求所必须的。 提供：数据绑定支持，@NumberFormatannotation支持，@DateTimeFormat支持，@Valid支持，读写XML的支持（JAXB），读写JSON的支持（Jackson） -->
	<mvc:annotation-driven>
		<mvc:argument-resolvers>
			<bean class="com.yuanlai.wpnos.ylcmsb.bind.GetMethodArgumentsResolver"/>
		</mvc:argument-resolvers>
		<mvc:message-converters register-defaults="true">
			<!-- 解决json数据中传输中文乱码问题 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<!-- 解决IE不能解析使用 application/json 类型返回的数据问题 -->
			<bean
				class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"
				p:supportedMediaTypes="text/html" />
			<!-- 全局date日期类型数据格式化 -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">    
                <property name="objectMapper">    
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">    
                        <property name="dateFormat">    
                            <bean class="java.text.SimpleDateFormat">    
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />    
                            </bean>    
                        </property>    
                    </bean>    
                </property>    
            </bean>  
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1" />
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="pdf" value="application/pdf" />
			</map>
		</property>
		<property name="defaultViews">
			<list>
				<!-- 若要返回json数据 方法前需加 @ResponseBody -->
				<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>
			</list>
		</property>
		<property name="viewResolvers">
			<list>
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<description>
						假如逻辑试图名为 "hello"，因此 viewResolver 将解析成 /WEB-INF/html/hello.html
					</description>
					<property name="prefix" value="/WEB-INF/html/" />
					<property name="suffix" value=".html" />
				</bean>
			</list>
		</property>
	</bean>
	
	<mvc:interceptors>
	  <mvc:interceptor>
	    <mvc:mapping path="/**" />
	    <bean class="com.yuanlai.wpnos.ylcmsb.interceptor.AllowOriginIntecepror" />
	  </mvc:interceptor>
	  <mvc:interceptor>
	    <mvc:mapping path="/**" />
	    <bean class="com.yuanlai.wpnos.ylcmsb.interceptor.AuthSsoCasInterceptor" > <!-- 单点登录tocken验证 -->
	    	<property name="excluded" value="/login.do,/logout.do" /> <!-- 不检查的url,多个逗号分隔 -->
	    </bean>
	  </mvc:interceptor>
	</mvc:interceptors>
	
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 <property 
			name="maxUploadSize" value="200000"/> -->
	</bean>
	<bean id="exceptionResolver" class="com.tangdi.def.utils.exception.TdMappingExceptionResolver">
	    <property name="exceptionMappings">
	        <props>
	            <prop key="com.tangdi.def.utils.exception.TdRuntimeException">error/error</prop>
	            <prop key="java.lang.Exception">error/error</prop>
	        </props>
	    </property>
	</bean>
</beans>